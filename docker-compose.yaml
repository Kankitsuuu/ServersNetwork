version: "3.5"

services:
  flask_servers_network:
    container_name: flask_servers_network
    build: .
    restart: always
    volumes:
      - /root/web-app/files:/usr/src/app/files
    ports:
      - "80:5000"
    depends_on:
      - postgres_db
    command: python manage.py run -h 0.0.0.0
    env_file:
      - ./.env.dev


  postgres_db:
    image: postgres:alpine3.17
    container_name: postgres_db
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=adminpass
      - POSTGRES_DB=servers_network_db

  redis:
    image: redis:7-alpine

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: celery_worker
    restart: always
    command: ./scripts/run_celery.sh
    volumes:
      - .:/app
      - /root/web-app/files:/usr/src/app/files
    links:
      - redis
    depends_on:
      - postgres_db
      - flask_servers_network
    env_file:
      - ./.env.dev

volumes:
  postgres_data: